<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on John Zeringue</title>
    <link>https://zeringue.io/post/</link>
    <description>Recent content in Posts on John Zeringue</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 04 Jun 2018 20:11:50 -0400</lastBuildDate>
    
	<atom:link href="https://zeringue.io/post/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>GraalVM &#43; Gradle &#43; Docker = Production Ready???</title>
      <link>https://zeringue.io/post/graalvm-gradle-docker/</link>
      <pubDate>Mon, 04 Jun 2018 20:11:50 -0400</pubDate>
      
      <guid>https://zeringue.io/post/graalvm-gradle-docker/</guid>
      <description>GraalVM is a new virtual machine from Oracle that supports several popular programming languages including JavaScript, Python, Ruby, and Java. One exciting feature of GraalVM is the ability to create native images from JVM binaries. These native images promise improved size, speed, startup time, and operational overhead compared to full JVMs.
Renato Athaydes first got me interested in GraalVM with his blog post on native images. I wanted to explore how you&amp;rsquo;d write a typical web application using native images, starting a new codebase from scratch.</description>
    </item>
    
  </channel>
</rss>